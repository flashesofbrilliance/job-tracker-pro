name: Discovery Preview Deploy (PR)

on:
  pull_request:
    branches:
      - main
    paths:
      - 'discovery*'
      - '.github/workflows/discovery-preview.yml'
  push:
    branches:
      - discovery/**
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to simulate'
        required: true
        default: '1'
        type: string

permissions:
  contents: write

concurrency:
  group: "pages-discovery-preview-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build-and-publish-discovery-preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: |
          (npm ci) || npm install
      - name: Build Discovery
        run: npm run build:discovery
      - name: Publish PR discovery preview and update manifest (gh-pages)
        env:
          PR_NUMBER: ${{ github.event.pull_request.number || github.event.inputs.pr_number }}
        run: |
          set -euo pipefail
          set +H
          mkdir -p repo
          cd repo
          git init
          git config user.name github-actions
          git config user.email github-actions@github.com
          git remote add origin "${{ github.server_url }}/${{ github.repository }}.git"
          git fetch origin gh-pages:gh-pages || true
          if git rev-parse --verify gh-pages >/dev/null 2>&1; then
            git checkout gh-pages
          else
            git checkout --orphan gh-pages
            rm -rf ./* .[^.]* || true
            cat > index.html << 'EOF'
<!DOCTYPE html><title>Build Catalog</title><p>Initialized gh-pages
EOF
            git add index.html
            git commit -m "chore: init gh-pages"
          fi
          DEST="env/discovery/pr-${PR_NUMBER}"
          mkdir -p "$(dirname "$DEST")"
          rm -rf "$DEST"
          mkdir -p "$DEST"
          cp -R ../dist-discovery/* "$DEST"/
          # Update manifest (with discovery env list)
          node -e '
            const fs=require("fs"),path=require("path");
            const env="discovery"; const name=process.env.DEST.split("/").pop(); const dest=process.env.DEST;
            const entry={ env, name, path: dest, commit: process.env.GITHUB_SHA, created_at: new Date().toISOString(), source: process.env.GITHUB_REF, type: "preview" };
            const root="env"; if(!fs.existsSync(root)) fs.mkdirSync(root);
            const mf=path.join(root,"manifest.json");
            let data={ envs:{ dev:[], qa:[], stage:[], prod:[], preview:[], discovery:[] }, updated_at: new Date().toISOString() };
            if(fs.existsSync(mf)) { try { data=JSON.parse(fs.readFileSync(mf,"utf8")); } catch(e){} }
            if(!data.envs) data.envs={};
            if(!data.envs[env]) data.envs[env]=[];
            data.envs[env]=data.envs[env].filter(e=>e.path!==dest);
            data.envs[env].unshift(entry);
            data.envs[env]=data.envs[env].slice(0,100);
            data.updated_at=new Date().toISOString();
            fs.writeFileSync(mf, JSON.stringify(data,null,2));
            const doctype = '<' + '!DOCTYPE html>';
            const html=[doctype,'<meta charset="utf-8">','<title>Build Catalog</title>','<h1>Build Catalog</h1>',...Object.entries(data.envs).map(([k,arr])=>`<h2>${k}</h2><ul>`+arr.map(i=>`<li><a href="/${i.path}/">${i.name}</a> <small>${i.created_at} (${i.commit?.slice(0,7)||''})</small></li>`).join('')+"</ul>")].join('\n');
            fs.writeFileSync(path.join('.', 'index.html'), html);
          '
          git add "$DEST" env/manifest.json index.html
          git commit -m "discovery-preview: ${DEST} from ${GITHUB_REF}@${GITHUB_SHA::7}" || true
          git push origin gh-pages
          cd -
      - name: Comment discovery preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request.number;
            const url = `https://${context.repo.owner}.github.io/${context.repo.repo}/env/discovery/pr-${pr}/`;
            const body = `ðŸ§­ Discovery preview deployed: ${url}`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr,
              body
            });

